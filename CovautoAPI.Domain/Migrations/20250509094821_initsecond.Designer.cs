// <auto-generated />
using System;
using CovautoAPI.Domain.Klasse;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CovautoAPI.Domain.Migrations
{
    [DbContext(typeof(CovautoContext))]
    [Migration("20250509094821_initsecond")]
    partial class initsecond
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("CovautoAPI.Domain.Entities.LeenAuto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Kenteken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("KilometerStand")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("LeenAuto");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Kenteken = "XX-123-X",
                            KilometerStand = 50000
                        },
                        new
                        {
                            Id = 2,
                            Kenteken = "YY-456-Y",
                            KilometerStand = 35000
                        });
                });

            modelBuilder.Entity("CovautoAPI.Domain.Entities.ReserveringData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("KilometerStand")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReserveringID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StartPostcode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StartStad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StartStraat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ToPostcode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ToStad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ToStraat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ReserveringData");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KilometerStand = 50200,
                            ReserveringID = 1,
                            StartPostcode = "1234AB",
                            StartStad = "Utrecht",
                            StartStraat = "Startstraat 1",
                            ToPostcode = "5678CD",
                            ToStad = "Amsterdam",
                            ToStraat = "Eindstraat 5"
                        });
                });

            modelBuilder.Entity("CovautoAPI.Domain.Entities.Reserveringen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BoekDatumTot")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BoekDatumVanaf")
                        .HasColumnType("TEXT");

                    b.Property<int>("LeenAutoID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReserveerDatum")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Reservingen");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BoekDatumTot = new DateTime(2024, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BoekDatumVanaf = new DateTime(2024, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeenAutoID = 1,
                            ReserveerDatum = new DateTime(2024, 5, 1, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            BoekDatumTot = new DateTime(2024, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BoekDatumVanaf = new DateTime(2024, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeenAutoID = 2,
                            ReserveerDatum = new DateTime(2024, 5, 3, 15, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
